<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:flex="http://www.springframework.org/schema/flex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/flex 
		http://www.springframework.org/schema/flex/spring-flex-1.5.xsd
		http://activemq.apache.org/schema/core 
		http://activemq.apache.org/schema/core/activemq-core.xsd
		http://www.springframework.org/schema/jms 
		http://www.springframework.org/schema/jms/spring-jms-3.1.xsd">
	
	<!-- 连接服务器专用配置,根据不同情况需要加载不同属性，通过程序执行下面类似的功能-->
	<amq:connectionFactory id="targetConnectionFactory" brokerURL="${openwire.uri}"/> 
	<!-- <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory" depends-on="brokerName">
    	<property name="brokerURL" value="${openwire.uri}"/>
  	</bean>-->
			
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactoryBean" depends-on="targetConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="50" />
	</bean>

	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory" />
	</bean>

	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<!--这个是主题目的地，一对多的 
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="clientTopic" />
	</bean>-->
	
	<!-- 消息监听器,此类应该是每个工程自己定义，所以此处只提供配置示例，具体的类，应该实现 javax.jms.MessageListener 接口
	<bean id="consumerMessageListener" class="com.aq.framework.data.listener.JmsListener"/>   -->  
	
	<!-- 队列消息监听容器 
	<bean id="jmsQueueContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	    <property name="connectionFactory" ref="connectionFactory" />  
	    <property name="destination" ref="queueDestination" />  
	    <property name="messageListener" ref="consumerMessageListener" />  
	</bean>-->  
	
	<!-- 主题消息监听容器 
	<bean id="jmsTopicContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	    <property name="connectionFactory" ref="connectionFactory" />  
	    <property name="destination" ref="topicDestination" />  
	    <property name="messageListener" ref="consumerMessageListener" />  
	</bean>-->  
</beans>